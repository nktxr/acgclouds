name: Plan

on: # yamllint disable-line rule:truthy
  push:
  workflow_dispatch:

permissions: {}

jobs:
  # Plan:
  #   name: Plan
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: read
  #     # To report GitHub Actions status checks
  #     statuses: write

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: hashicorp/setup-terraform@v3

  #     - name: Terraform fmt
  #       id: fmt
  #       run: terraform fmt -check
  #       continue-on-error: true

  #     - name: Terraform Init
  #       id: init
  #       run: terraform init -input=false

  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate -no-color

  #     - name: Terraform Plan
  #       id: plan
  #       run: terraform plan -no-color -input=false
  #       continue-on-error: true

  Localstack:
    name: Deploy Terraform Infrastructure to Localstack
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Start Localstack
        id: start-localstack
        run: |
          pip install localstack awscli-local[ver1]
          pip install terraform-local
          docker pull localstack/localstack:latest
          localstack start -d
          echo "Waiting 30 seconds for Localstack to start"
          localstack wait -t 15
          echo "Localstack started"

      - name: Deploy on Terraform
        id: deploy
        run: |
          tflocal init
          tflocal apply -auto-approve
          echo "Terraform applied"
      - name: Check Localstack Resources
        id: check-localstack-resources
        run: |
          localstack status resources
          echo "Localstack resources checked"
          awslocal s3 ls

      - name: Generate diagnostic report
        if: failure()
        run: |
          curl -s localstack:4566/_localstack/diagnose | gzip -cf > localstack-diagnose.gz

      - name: Upload
        if: failure()
        uses: actions/upload-artifact@v3.1.2
        with:
          name: localstack-diagnose
          path: localstack-diagnose.gz
